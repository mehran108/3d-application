{"version":3,"sources":["components/Chair/Chair.js","components/Room/Room.js","components/Bed/Bed.js","components/Todos.js","components/Home.js","components/Chair/ChairConfig.js","components/Chair/ChairJSX.js","components/Sophie.js","components/About.js","components/Room/RoomJSX.js","components/Bed/BedJSX.js","routes/main.js","components/partials/SideDrawer/DrawerToggleButton.js","components/partials/Navbar/header.js","components/partials/SideDrawer/SideDrawer.js","components/partials/Backdrop/Backdrop.js","App.js","serviceWorker.js","index.js"],"names":["theModel","scene","LOADER","TRAY","canvas","camera","controls","slider","sliderItems","difference","options","raycaster","mouse","INITIAL_MTL","SECOND_MTL","Delete","props","value","Todos","columnDefs","field","headerName","cellRenderer","useState","rowData","setRowData","useEffect","Axios","get","then","response","data","className","style","height","width","enableSorting","enableFilter","pagination","paginationPageSize","onCellClicked","console","log","onCellDoubleClicked","gridOptions","Home","colors","texture","size","shininess","color","JSX","id","data-option","src","alt","loaded","CONFIG","renderer","activeOption","Chair","initColor","parent","type","mtl","zPosition","traverse","o","isMesh","name","includes","material","nameID","resizeRendererToDisplaySize","domElement","window","innerWidth","innerHeight","canvasPixelWidth","devicePixelRatio","canvasPixelHeight","needResize","setSize","selectOption","e","option","target","dataset","classList","remove","add","part","children","find","model","setChildPosition","child","geometry","computeBoundingBox","boundingBox","position","THREE","subVectors","max","min","multiplyScalar","applyMatrix4","matrixWorld","z","copy","lookAt","selectSwatch","new_mtl","parseInt","key","txt","load","repeat","set","wrapS","wrapT","map","setMaterial","initRotate","initialRotation","rotation","y","Math","PI","document","getElementById","querySelector","background","fog","updateMatrixWorld","antialias","shadowMap","enabled","setPixelRatio","x","initEnvironment","Interaction","INITIAL_MAP","childID","GLTFLoader","gltf","castShadow","receiveShadow","on","ev","wireframe","scale","object","undefined","error","loadModel","hemiLight","dirLight","shadow","mapSize","floorGeometry","floorMaterial","floor","OrbitControls","maxPolarAngle","minPolarAngle","enableDamping","enablePan","dampingFactor","autoRotate","autoRotateSpeed","addLights","animate","update","render","requestAnimationFrame","aspect","clientWidth","clientHeight","updateProjectionMatrix","entries","i","swatch","createElement","backgroundImage","setAttribute","append","buildColors","getElementsByClassName","wrapper","items","posInitial","posFinal","posX1","posX2","dragStart","event","offsetLeft","offsetWidth","touches","clientX","onmouseup","dragEnd","onmousemove","dragAction","left","onmousedown","addEventListener","slide","querySelectorAll","swatches","Sophie","DRAG_NOTICE","FBXLoader","pointLight","About","RoomJSX","onMouseMove","rayCasterRenderer","selectArea","prop","clientY","intersects","objectList","setFromCamera","intersectObjects","length","setHex","BedSX","Bed","BedJSX","Routes","path","exact","component","Room","DrawerToggleButton","onClick","click","Header","drawerToggleHandler","to","SideDrawer","drawerClasses","show","backdrop","App","SideDrawerOpen","setSideDrawerOpen","a","backdropClickHandler","marginTop","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f1576996.chunk.js","sourcesContent":["import React, { Component, useEffect } from 'react';\nimport './Chair.css';\nimport * as CONFIG from \"./ChairConfig\";\nimport JSX from './ChairJSX';\nimport * as THREE from \"three\";\n// import * as THREEx from \"threex\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { Interaction } from 'three.interaction';\nvar theModel;\nconst MODEL_PATH = CONFIG.MODEL_PATH;\nvar loaded = false;\nconst colors = CONFIG.colors;\nconst BACKGROUND_COLOR = CONFIG.BACKGROUND_COLOR;\nvar renderer = null;\nvar activeOption = CONFIG.activeOption;\nvar scene;\nvar LOADER;\nvar TRAY;\nvar DRAG_NOTICE;\nvar canvas;\nvar camera;\nvar controls;\nvar slider;\nvar sliderItems;\nvar difference;\nvar options;\nvar slides;\nexport const Chair = () => {\n  const initEnvironment = () => {\n    LOADER = document.getElementById('js-loader');\n    TRAY = document.getElementById('js-tray-slide');\n    DRAG_NOTICE = document.getElementById('js-drag-notice');\n    canvas = document.querySelector('#c');\n\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(BACKGROUND_COLOR);\n    scene.fog = new THREE.Fog(BACKGROUND_COLOR, 20, 100);\n    scene.updateMatrixWorld(true);\n    renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\n    renderer.shadowMap.enabled = true;\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    var cameraFar = 5;\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = cameraFar;\n    camera.position.x = 0;\n  }\n  const loadModel = () => {\n    // Initial material\n    const interaction = new Interaction(renderer, scene, camera);\n    const INITIAL_MTL = new THREE.MeshPhongMaterial({ color: 0xf1f1f1, shininess: 10 });\n    const SECOND_MTL = new THREE.MeshPhongMaterial({ color: 0x27AE60, shininess: 10 });\n\n    const INITIAL_MAP = [\n      { childID: \"back\", mtl: SECOND_MTL, zPosition: -5, },\n      { childID: \"base\", mtl: INITIAL_MTL, zPosition: 3 },\n      { childID: \"cushions\", mtl: SECOND_MTL, zPosition: 5 },\n      { childID: \"legs\", mtl: INITIAL_MTL, zPosition: -5 },\n      { childID: \"supports\", mtl: SECOND_MTL, zPosition: -5 }];\n\n    var loader = new GLTFLoader();\n    loader.load(MODEL_PATH, function (gltf) {\n      theModel = gltf.scene;\n\n      theModel.traverse(o => {\n        if (o.isMesh) {\n          o.castShadow = true;\n          o.receiveShadow = true;\n          o.on('mouseover', (ev) => {\n            ev.data.target.material.wireframe = true;;\n          });\n          o.on('mouseout', (ev) => {\n            ev.data.target.material.wireframe = false;;\n          });\n        }\n      });\n\n      // Set the models initial scale   \n      theModel.scale.set(2, 2, 2);\n      theModel.rotation.y = Math.PI;\n\n      // Offset the y position a bit\n      theModel.position.y = -1;\n\n      // Set initial textures\n      for (let object of INITIAL_MAP) {\n        initColor(theModel, object.childID, object.mtl, object.zPosition);\n      }\n      // Add the model to the scene\n      scene.add(theModel);\n\n      // Remove the loader\n      LOADER.remove();\n\n    }, undefined, function (error) {\n      console.error(error);\n    });\n  }\n  const addLights = () => {\n    // Add lights\n    var hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.61);\n    hemiLight.position.set(0, 50, 0);\n    // Add hemisphere light to scene   \n    scene.add(hemiLight);\n\n    var dirLight = new THREE.DirectionalLight(0xffffff, 0.54);\n    dirLight.position.set(-8, 12, 8);\n    dirLight.castShadow = true;\n    dirLight.shadow.mapSize = new THREE.Vector2(1024, 1024);\n    // Add directional Light to scene    \n    scene.add(dirLight);\n    // Floor\n    var floorGeometry = new THREE.PlaneGeometry(5000, 5000, 1, 1);\n    var floorMaterial = new THREE.MeshPhongMaterial({\n      color: 0xeeeeee,\n      shininess: 0\n    });\n\n\n    var floor = new THREE.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -0.5 * Math.PI;\n    floor.receiveShadow = true;\n    floor.position.y = -1;\n    scene.add(floor);\n    // Add controls\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.maxPolarAngle = Math.PI / 2;\n    controls.minPolarAngle = Math.PI / 3;\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    controls.dampingFactor = 0.1;\n    controls.autoRotate = false; // Toggle this if you'd like the chair to automatically rotate\n    controls.autoRotateSpeed = 0.2; // 30\n  }\n  const initColor = (parent, type, mtl, zPosition) => {\n    parent.traverse(o => {\n      if (o.isMesh) {\n        if (o.name.includes(type)) {\n          o.material = mtl;\n          o.nameID = type; // Set a new property to identify this object\n          o.zPosition = zPosition; // Set a new property to identify this object\n        }\n      }\n    });\n  };\n  const animate = () => {\n    controls.update();\n    renderer.render(scene, camera);\n    requestAnimationFrame(animate);\n\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    if (theModel != null && loaded === false) {\n      initialRotation();\n    }\n\n  };\n  const resizeRendererToDisplaySize = (renderer) => {\n    const canvas = renderer.domElement;\n    var width = window.innerWidth;\n    var height = window.innerHeight;\n    var canvasPixelWidth = canvas.width / window.devicePixelRatio;\n    var canvasPixelHeight = canvas.height / window.devicePixelRatio;\n\n    const needResize = canvasPixelWidth !== width || canvasPixelHeight !== height;\n    if (needResize) {\n\n      renderer.setSize(width, height, false);\n    }\n    return needResize;\n  }\n  const buildColors = (colors) => {\n    for (let [i, color] of colors.entries()) {\n      let swatch = document.createElement('div');\n      swatch.classList.add('tray__swatch');\n\n      if (color.texture) {\n        swatch.style.backgroundImage = \"url(\" + color.texture + \")\";\n      } else {\n        swatch.style.background = \"#\" + color.color;\n      }\n\n      swatch.setAttribute('data-key', i);\n      TRAY.append(swatch);\n    }\n  }\n  const selectOption = (e) => {\n    let option = e.target;\n    activeOption = e.target.dataset.option;\n    for (const otherOption of options) {\n      otherOption.classList.remove('--is-active');\n    }\n    option.classList.add('--is-active');\n    // camera.position.x = option.position;\n    const part = theModel.children.find(model => model.nameID === activeOption);\n\n    setChildPosition(part)\n    // camera.lookAt(position.x, position.y, position.z);\n    // controls.target.copy(position);\n    // const mesh = new THREE.Mesh(part.geometry, new THREE.LineBasicMaterial({color: 0xffffff}));\n    // // mesh.visible   = false\n    // scene.add(mesh);\n\n    // var edges = new THREE.EdgesGeometry(part.geometry);\n    // var line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({ color: 0xff0000 }));\n    //console.log(mesh);\n    // var outlineMaterial1 = new THREE.MeshBasicMaterial({ color: 0xff0000, side: THREE.BackSide, wireframe: true });\n    // var outlineMesh1 = new THREE.Mesh(part.geometry, outlineMaterial1);\n\n    // child = child of my object\n\n    // var outlineMaterial1 = new THREE.MeshBasicMaterial({ color: 0xffffff, side: THREE.BackSide, wireframe: true });\n    // var outlineMesh1 = new THREE.Mesh(part.geometry, outlineMaterial1);\n    // outlineMesh1.position.set(part.position);\n    // outlineMesh1.scale.multiplyScalar(1.05);\n    // scene.add(outlineMesh1);\n    // scene.add(outlineMaterial1);\n    // var geo = new THREE.EdgesGeometry(part.geometry);\n    // var mat = new THREE.LineBasicMaterial({ color: 0x000000, linewidth: 4 });\n    // var wireframe = new THREE.LineSegments(geo, mat);\n    // wireframe.renderOrder = 1; // make sure wireframes are rendered 2nd\n    // part.add(wireframe);\n    // position.z = part.zPosition;\n    // var wireframeGeomtry = new THREE.WireframeGeometry(part.geometry);\n    // var wireframeMaterial = new THREE.LineBasicMaterial({ color: 0xffffff });\n    // var wireframe = new THREE.LineSegments(wireframeGeomtry, wireframeMaterial);\n    // wireframe.name = part.nameID;\n    // part.add(wireframe);\n    // camera.position.copy(position);\n    // camera.lookAt(controls.target);\n    // camera.translate(0,0,1);\n    // camera.far = cameraFar;\n    // camera.Translate(0, 0, 1);\n    // var bb = new THREE.Box3()\n    // bb.setFromObject(part);\n    // bb.center(controls.target);\n    // alert(position.x + ',' + position.y + ',' + position.z);\n  }\n  const setChildPosition = (child) => {\n\n    child.geometry.computeBoundingBox();\n\n    var boundingBox = child.geometry.boundingBox;\n\n    var position = new THREE.Vector3();\n    position.subVectors(boundingBox.max, boundingBox.min);\n    position.multiplyScalar(0.5);\n    position.add(boundingBox.min);\n\n    position.applyMatrix4(child.matrixWorld);\n    position.z = child.zPosition;\n    camera.position.copy(position);\n    camera.lookAt(controls.target);\n  }\n\n  const slide = (wrapper, items) => {\n    var posX1 = 0,\n      posX2 = 0,\n      posInitial,\n      threshold = 20,\n      posFinal\n    const dragStart = (e) => {\n      e = e || window.event;\n      posInitial = items.offsetLeft;\n      difference = sliderItems.offsetWidth - slider.offsetWidth;\n      difference = difference * -1;\n\n      if (e.type === 'touchstart') {\n        posX1 = e.touches[0].clientX;\n      } else {\n        posX1 = e.clientX;\n        document.onmouseup = dragEnd;\n        document.onmousemove = dragAction;\n      }\n    }\n\n    const dragAction = (e) => {\n      e = e || window.event;\n\n      if (e.type === 'touchmove') {\n        posX2 = posX1 - e.touches[0].clientX;\n        posX1 = e.touches[0].clientX;\n      } else {\n        posX2 = posX1 - e.clientX;\n        posX1 = e.clientX;\n      }\n\n      if (items.offsetLeft - posX2 <= 0 && items.offsetLeft - posX2 >= difference) {\n        items.style.left = items.offsetLeft - posX2 + \"px\";\n      }\n    }\n\n    const dragEnd = (e) => {\n      posFinal = items.offsetLeft;\n      if (posFinal - posInitial < -threshold) {\n\n      } else if (posFinal - posInitial > threshold) {\n\n      } else {\n        items.style.left = posInitial + \"px\";\n      }\n\n      document.onmouseup = null;\n      document.onmousemove = null;\n    }\n    // Mouse events\n    items.onmousedown = dragStart;\n    // Touch events\n    items.addEventListener('touchstart', dragStart);\n    items.addEventListener('touchend', dragEnd);\n    items.addEventListener('touchmove', dragAction);\n    // slide(slider, sliderItems);\n  }\n  const selectSwatch = (e) => {\n    let color = colors[parseInt(e.target.dataset.key)];\n    let new_mtl;\n\n    if (color.texture) {\n\n      let txt = new THREE.TextureLoader().load(color.texture);\n\n      txt.repeat.set(color.size[0], color.size[1], color.size[2]);\n      txt.wrapS = THREE.RepeatWrapping;\n      txt.wrapT = THREE.RepeatWrapping;\n\n      new_mtl = new THREE.MeshPhongMaterial({\n        map: txt,\n        shininess: color.shininess ? color.shininess : 10\n      });\n\n    } else {\n      new_mtl = new THREE.MeshPhongMaterial({\n        color: parseInt('0x' + color.color),\n        shininess: color.shininess ? color.shininess : 10\n      });\n\n\n    }\n\n    setMaterial(theModel, activeOption, new_mtl);\n  }\n  const setMaterial = (parent, type, mtl) => {\n    parent.traverse(o => {\n      if (o.isMesh && o.nameID != null) {\n        if (o.nameID === type) {\n          o.material = mtl;\n        }\n      }\n    });\n  }\n  // Function - Opening rotate\n  let initRotate = 0;\n\n  const initialRotation = () => {\n    initRotate++;\n    if (initRotate <= 120) {\n      theModel.rotation.y += Math.PI / 60;\n    } else {\n      loaded = true;\n    }\n  }\n\n  useEffect(() => {\n    initEnvironment();\n    loadModel();\n    addLights();\n    animate();\n    buildColors(colors)\n    slider = document.getElementById('js-tray');\n    sliderItems = document.getElementById('js-tray-slide');\n    slides = sliderItems.getElementsByClassName('tray__swatch');\n\n    slide(slider, sliderItems);\n\n    // Select Option\n    options = document.querySelectorAll(\".option\");\n    for (const option of options) {\n      option.addEventListener('click', selectOption);\n    }\n    // Swatches\n    const swatches = document.querySelectorAll(\".tray__swatch\");\n    for (const swatch of swatches) {\n      swatch.addEventListener('click', selectSwatch);\n    }\n  }, []);\n\n  return (\n    <JSX />\n  )\n}\nexport default Chair;","import React, { useEffect } from 'react';\r\nimport '../Chair/Chair.css';\r\nimport * as CONFIG from \"../Chair/ChairConfig\";\r\n// import JSX from './ChairJSX';\r\nimport * as THREE from \"three\";\r\n// import * as THREEx from \"threex\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { Interaction } from 'three.interaction';\r\nimport RoomJSX from './RoomJSX';\r\nvar theModel;\r\nconst MODEL_PATH = CONFIG.ROOM_MODEL_PATH;\r\nvar loaded = false;\r\nconst colors = CONFIG.colors;\r\nconst BACKGROUND_COLOR = CONFIG.BACKGROUND_COLOR;\r\nvar renderer = null;\r\nvar activeOption = CONFIG.activeOption;\r\nvar scene;\r\nvar LOADER;\r\nvar TRAY;\r\nvar DRAG_NOTICE;\r\nvar canvas;\r\nvar camera;\r\nvar controls;\r\nvar slider;\r\nvar sliderItems;\r\nvar difference;\r\nvar options;\r\nvar slides;\r\nvar raycaster;\r\nvar mouse;\r\nvar INITIAL_MTL;\r\nvar SECOND_MTL;\r\nexport const Chair = () => {\r\n    const initEnvironment = () => {\r\n        LOADER = document.getElementById('js-loader');\r\n        TRAY = document.getElementById('js-tray-slide');\r\n        DRAG_NOTICE = document.getElementById('js-drag-notice');\r\n        canvas = document.querySelector('#c');\r\n\r\n        scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(BACKGROUND_COLOR);\r\n        scene.fog = new THREE.Fog(BACKGROUND_COLOR, 20, 100);\r\n        scene.updateMatrixWorld(true);\r\n        renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n        var cameraFar = 5;\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n        camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        camera.position.z = cameraFar;\r\n        camera.position.x = 0;\r\n    }\r\n    const loadModel = () => {\r\n        // Initial material\r\n        const interaction = new Interaction(renderer, scene, camera);\r\n        INITIAL_MTL = new THREE.MeshPhongMaterial({ color: 0xf1f1f1, shininess: 10 });\r\n        SECOND_MTL = new THREE.MeshPhongMaterial({ color: 0x27AE60, shininess: 10 });\r\n\r\n        const INITIAL_MAP = [\r\n            { childID: \"Outer_Wall\", mtl: SECOND_MTL, zPosition: -5, },\r\n            { childID: \"Inner_Room_Wall\", mtl: INITIAL_MTL, zPosition: 3 },\r\n            { childID: \"Floor\", mtl: SECOND_MTL, zPosition: 5 }\r\n        ];\r\n\r\n        var loader = new GLTFLoader();\r\n        loader.load(MODEL_PATH, function (gltf) {\r\n            theModel = gltf.scene;\r\n\r\n            theModel.traverse(o => {\r\n                if (o.isMesh) {\r\n                    o.castShadow = true;\r\n                    o.receiveShadow = true;\r\n                    o.on('click', selectArea, false);\r\n\r\n                    o.on('mouseout', prop => {\r\n                        // console.log(prop)\r\n                    }, false);\r\n                    o.on('mouseover', prop => {\r\n                        // console.log(prop)\r\n                    }, false);\r\n                }\r\n            });\r\n\r\n            // Set the models initial scale   \r\n            theModel.scale.set(2, 2, 2);\r\n            theModel.rotation.y = Math.PI;\r\n\r\n            // Offset the y position a bit\r\n            theModel.position.y = -1;\r\n\r\n            // Set initial textures\r\n            for (let object of INITIAL_MAP) {\r\n                initColor(theModel, object.childID, object.mtl, object.zPosition);\r\n            }\r\n            // Add the model to the scene\r\n            scene.add(theModel);\r\n\r\n            // Remove the loader\r\n            LOADER.remove();\r\n\r\n        }, undefined, function (error) {\r\n            console.error(error);\r\n        });\r\n    }\r\n    const addLights = () => {\r\n        // Add lights\r\n        var hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.61);\r\n        hemiLight.position.set(0, 50, 0);\r\n        // Add hemisphere light to scene   \r\n        scene.add(hemiLight);\r\n\r\n        var dirLight = new THREE.DirectionalLight(0xffffff, 0.54);\r\n        dirLight.position.set(-8, 12, 8);\r\n        // dirLight.castShadow = true;\r\n        dirLight.shadow.mapSize = new THREE.Vector2(1024, 1024);\r\n        // Add directional Light to scene    \r\n        scene.add(dirLight);\r\n        // Floor\r\n        var floorGeometry = new THREE.PlaneGeometry(5000, 5000, 1, 1);\r\n        var floorMaterial = new THREE.MeshPhongMaterial({\r\n            color: 0xeeeeee,\r\n            shininess: 0\r\n        });\r\n\r\n\r\n        var floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n        floor.rotation.x = -0.5 * Math.PI;\r\n        // floor.receiveShadow = true;\r\n        floor.position.y = -1;\r\n        scene.add(floor);\r\n        // Add controls\r\n        controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.maxPolarAngle = Math.PI / 2;\r\n        controls.minPolarAngle = Math.PI / 3;\r\n        controls.enableDamping = true;\r\n        controls.enablePan = false;\r\n        controls.dampingFactor = 0.1;\r\n        controls.autoRotate = false; // Toggle this if you'd like the chair to automatically rotate\r\n        controls.autoRotateSpeed = 0.2; // 30\r\n    }\r\n    const initColor = (parent, type, mtl, zPosition) => {\r\n        parent.traverse(o => {\r\n            if (o.isMesh) {\r\n                if (o.name.includes(type)) {\r\n                    o.material = mtl;\r\n                    o.nameID = type; // Set a new property to identify this object\r\n                    o.zPosition = zPosition; // Set a new property to identify this object\r\n                }\r\n            }\r\n        });\r\n    };\r\n    const animate = () => {\r\n        controls.update();\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(animate);\r\n\r\n        if (resizeRendererToDisplaySize(renderer)) {\r\n            const canvas = renderer.domElement;\r\n            camera.aspect = canvas.clientWidth / canvas.clientHeight;\r\n            camera.updateProjectionMatrix();\r\n        }\r\n\r\n        if (theModel != null && loaded === false) {\r\n            initialRotation();\r\n        }\r\n        rayCasterRenderer();\r\n    };\r\n    const resizeRendererToDisplaySize = (renderer) => {\r\n        const canvas = renderer.domElement;\r\n        var width = window.innerWidth;\r\n        var height = window.innerHeight;\r\n        var canvasPixelWidth = canvas.width / window.devicePixelRatio;\r\n        var canvasPixelHeight = canvas.height / window.devicePixelRatio;\r\n\r\n        const needResize = canvasPixelWidth !== width || canvasPixelHeight !== height;\r\n        if (needResize) {\r\n\r\n            renderer.setSize(width, height, false);\r\n        }\r\n        return needResize;\r\n    }\r\n    const buildColors = (colors) => {\r\n        for (let [i, color] of colors.entries()) {\r\n            let swatch = document.createElement('div');\r\n            swatch.classList.add('tray__swatch');\r\n\r\n            if (color.texture) {\r\n                swatch.style.backgroundImage = \"url(\" + color.texture + \")\";\r\n            } else {\r\n                swatch.style.background = \"#\" + color.color;\r\n            }\r\n\r\n            swatch.setAttribute('data-key', i);\r\n            TRAY.append(swatch);\r\n        }\r\n    }\r\n    const selectOption = (e) => {\r\n        let option = e.target;\r\n        activeOption = e.target.dataset && e.target.dataset.option ? e.target.dataset.option : e.target;\r\n        for (const otherOption of options) {\r\n            otherOption.classList.remove('--is-active');\r\n        }\r\n        option.classList.add('--is-active');\r\n        // camera.position.x = option.position;\r\n        const part = theModel.children.find(model => model.nameID === activeOption);\r\n\r\n        setChildPosition(part)\r\n        // camera.lookAt(position.x, position.y, position.z);\r\n        // controls.target.copy(position);\r\n        // const mesh = new THREE.Mesh(part.geometry, new THREE.LineBasicMaterial({color: 0xffffff}));\r\n        // // mesh.visible   = false\r\n        // scene.add(mesh);\r\n\r\n        // var edges = new THREE.EdgesGeometry(part.geometry);\r\n        // var line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({ color: 0xff0000 }));\r\n        //console.log(mesh);\r\n        // var outlineMaterial1 = new THREE.MeshBasicMaterial({ color: 0xff0000, side: THREE.BackSide, wireframe: true });\r\n        // var outlineMesh1 = new THREE.Mesh(part.geometry, outlineMaterial1);\r\n\r\n        // child = child of my object\r\n\r\n        // var outlineMaterial1 = new THREE.MeshBasicMaterial({ color: 0xffffff, side: THREE.BackSide, wireframe: true });\r\n        // var outlineMesh1 = new THREE.Mesh(part.geometry, outlineMaterial1);\r\n        // outlineMesh1.position.set(part.position);\r\n        // outlineMesh1.scale.multiplyScalar(1.05);\r\n        // scene.add(outlineMesh1);\r\n        // scene.add(outlineMaterial1);\r\n        // var geo = new THREE.EdgesGeometry(part.geometry);\r\n        // var mat = new THREE.LineBasicMaterial({ color: 0x000000, linewidth: 4 });\r\n        // var wireframe = new THREE.LineSegments(geo, mat);\r\n        // wireframe.renderOrder = 1; // make sure wireframes are rendered 2nd\r\n        // part.add(wireframe);\r\n        // position.z = part.zPosition;\r\n        // var wireframeGeomtry = new THREE.WireframeGeometry(part.geometry);\r\n        // var wireframeMaterial = new THREE.LineBasicMaterial({ color: 0xffffff });\r\n        // var wireframe = new THREE.LineSegments(wireframeGeomtry, wireframeMaterial);\r\n        // wireframe.name = part.nameID;\r\n        // part.add(wireframe);\r\n        // camera.position.copy(position);\r\n        // camera.lookAt(controls.target);\r\n        // camera.translate(0,0,1);\r\n        // camera.far = cameraFar;\r\n        // camera.Translate(0, 0, 1);\r\n        // var bb = new THREE.Box3()\r\n        // bb.setFromObject(part);\r\n        // bb.center(controls.target);\r\n        // alert(position.x + ',' + position.y + ',' + position.z);\r\n    }\r\n    const setChildPosition = (child) => {\r\n\r\n        child.geometry.computeBoundingBox();\r\n\r\n        var boundingBox = child.geometry.boundingBox;\r\n\r\n        var position = new THREE.Vector3();\r\n        position.subVectors(boundingBox.max, boundingBox.min);\r\n        position.multiplyScalar(0.5);\r\n        position.add(boundingBox.min);\r\n\r\n        position.applyMatrix4(child.matrixWorld);\r\n        position.z = child.zPosition;\r\n        camera.position.copy(position);\r\n        camera.lookAt(controls.target);\r\n    }\r\n\r\n    const slide = (wrapper, items) => {\r\n        var posX1 = 0,\r\n            posX2 = 0,\r\n            posInitial,\r\n            threshold = 20,\r\n            posFinal\r\n        const dragStart = (e) => {\r\n            e = e || window.event;\r\n            posInitial = items.offsetLeft;\r\n            difference = sliderItems.offsetWidth - slider.offsetWidth;\r\n            difference = difference * -1;\r\n\r\n            if (e.type === 'touchstart') {\r\n                posX1 = e.touches[0].clientX;\r\n            } else {\r\n                posX1 = e.clientX;\r\n                document.onmouseup = dragEnd;\r\n                document.onmousemove = dragAction;\r\n            }\r\n        }\r\n\r\n        const dragAction = (e) => {\r\n            e = e || window.event;\r\n\r\n            if (e.type === 'touchmove') {\r\n                posX2 = posX1 - e.touches[0].clientX;\r\n                posX1 = e.touches[0].clientX;\r\n            } else {\r\n                posX2 = posX1 - e.clientX;\r\n                posX1 = e.clientX;\r\n            }\r\n\r\n            if (items.offsetLeft - posX2 <= 0 && items.offsetLeft - posX2 >= difference) {\r\n                items.style.left = items.offsetLeft - posX2 + \"px\";\r\n            }\r\n        }\r\n\r\n        const dragEnd = (e) => {\r\n            posFinal = items.offsetLeft;\r\n            if (posFinal - posInitial < -threshold) {\r\n\r\n            } else if (posFinal - posInitial > threshold) {\r\n\r\n            } else {\r\n                items.style.left = posInitial + \"px\";\r\n            }\r\n\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n        }\r\n        // Mouse events\r\n        items.onmousedown = dragStart;\r\n        // Touch events\r\n        items.addEventListener('touchstart', dragStart);\r\n        items.addEventListener('touchend', dragEnd);\r\n        items.addEventListener('touchmove', dragAction);\r\n        // slide(slider, sliderItems);\r\n    }\r\n    const selectSwatch = (e) => {\r\n        let color = colors[parseInt(e.target.dataset.key)];\r\n        let new_mtl;\r\n\r\n        if (color.texture) {\r\n\r\n            let txt = new THREE.TextureLoader().load(color.texture);\r\n\r\n            txt.repeat.set(color.size[0], color.size[1], color.size[2]);\r\n            txt.wrapS = THREE.RepeatWrapping;\r\n            txt.wrapT = THREE.RepeatWrapping;\r\n\r\n            new_mtl = new THREE.MeshPhongMaterial({\r\n                map: txt,\r\n                shininess: color.shininess ? color.shininess : 10\r\n            });\r\n\r\n        } else {\r\n            new_mtl = new THREE.MeshPhongMaterial({\r\n                color: parseInt('0x' + color.color),\r\n                shininess: color.shininess ? color.shininess : 10\r\n            });\r\n\r\n\r\n        }\r\n\r\n        setMaterial(theModel, activeOption, new_mtl);\r\n    }\r\n    const setMaterial = (parent, type, mtl) => {\r\n        parent.traverse(o => {\r\n            if (o.isMesh && o.nameID != null) {\r\n                if (o.nameID === type) {\r\n                    o.material = mtl;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // Function - Opening rotate\r\n    let initRotate = 0;\r\n\r\n    const initialRotation = () => {\r\n        initRotate++;\r\n        if (initRotate <= 120) {\r\n            theModel.rotation.y += Math.PI / 60;\r\n        } else {\r\n            loaded = true;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        raycaster = new THREE.Raycaster();\r\n        mouse = new THREE.Vector2();\r\n        window.addEventListener('mousemove', onMouseMove, false);\r\n\r\n        window.requestAnimationFrame(rayCasterRenderer);\r\n        initEnvironment();\r\n        loadModel();\r\n        addLights();\r\n        animate();\r\n        buildColors(colors);\r\n\r\n\r\n        // render();\r\n        slider = document.getElementById('js-tray');\r\n        sliderItems = document.getElementById('js-tray-slide');\r\n        slides = sliderItems.getElementsByClassName('tray__swatch');\r\n\r\n        slide(slider, sliderItems);\r\n\r\n        // Select Option\r\n        options = document.querySelectorAll(\".option\");\r\n        for (const option of options) {\r\n            option.addEventListener('click', selectOption);\r\n        }\r\n        // Swatches\r\n        const swatches = document.querySelectorAll(\".tray__swatch\");\r\n        for (const swatch of swatches) {\r\n            swatch.addEventListener('click', selectSwatch);\r\n        }\r\n    }, []);\r\n    const onMouseMove = (event) => {\r\n\r\n        // calculate mouse position in normalized device coordinates\r\n        // (-1 to +1) for both components\r\n\r\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n        // activeOption = event.intersects[0].object.name;\r\n        // event.intersects[0].object.material.color.set(0xffeeee);\r\n        // rayCasterRenderer();\r\n\r\n    }\r\n    const selectArea = (event) => {\r\n        activeOption = event.intersects[0].object.name;\r\n\r\n    }\r\n    // const onMouseMoveOut = (event) => {\r\n\r\n    //     // calculate mouse position in normalized device coordinates\r\n    //     // (-1 to +1) for both components\r\n\r\n    //     mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    //     mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n    //     if (event && event.intersects.length > 0) {\r\n    //         for (var i = 0; i < event.intersects.length; i++) {\r\n\r\n    //             event.intersects[i].object.material.color.set(0xffeeee);\r\n    //             switch (event.intersects[i].object.name) {\r\n    //                 case 'Outer_Wall': {\r\n    //                     event.intersects[i].object.material.color.set(SECOND_MTL);\r\n    //                     break;\r\n    //                 }\r\n    //                 case 'Inner_Room_Wall': {\r\n    //                     event.intersects[i].object.material.color.set(INITIAL_MTL);\r\n    //                     break;\r\n    //                 }\r\n    //                 case 'Floor': {\r\n    //                     event.intersects[i].object.material.color.set(SECOND_MTL);\r\n    //                     break;\r\n    //                 }\r\n    //                 default: { }\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     // event.intersects[0].object.material.color.set(0xffeeee);\r\n    //     // rayCasterRenderer();\r\n\r\n    // }\r\n    const rayCasterRenderer = (objectList) => {\r\n\r\n        // update the picking ray with the camera and mouse position\r\n        raycaster.setFromCamera(mouse, camera);\r\n\r\n        // calculate objects intersecting the picking ray\r\n        var intersects = raycaster.intersectObjects(scene.children);\r\n\r\n        for (var i = 0; i < intersects.length; i++) {\r\n\r\n            intersects[i].object.material.color.setHex(0x27AE60);\r\n\r\n        }\r\n\r\n        renderer.render(scene, camera);\r\n\r\n    }\r\n    return (\r\n        <RoomJSX />\r\n    )\r\n}\r\nexport default Chair;","import React, { useEffect } from 'react';\r\nimport '../Chair/Chair.css';\r\nimport * as CONFIG from \"../Chair/ChairConfig\";\r\n// import JSX from './ChairJSX';\r\nimport * as THREE from \"three\";\r\n// import * as THREEx from \"threex\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { Interaction } from 'three.interaction';\r\nimport BedJSX from './BedJSX';\r\nvar theModel;\r\nconst MODEL_PATH = CONFIG.BED_MODEL_PATH;\r\nvar loaded = false;\r\nconst colors = CONFIG.colors;\r\nconst BACKGROUND_COLOR = CONFIG.BACKGROUND_COLOR;\r\nvar renderer = null;\r\nvar activeOption = CONFIG.activeOption;\r\nvar scene;\r\nvar LOADER;\r\nvar TRAY;\r\nvar DRAG_NOTICE;\r\nvar canvas;\r\nvar camera;\r\nvar controls;\r\nvar slider;\r\nvar sliderItems;\r\nvar difference;\r\nvar options;\r\nvar slides;\r\nvar raycaster;\r\nvar mouse;\r\nvar INITIAL_MTL;\r\nvar SECOND_MTL;\r\nexport const Bed = () => {\r\n    const initEnvironment = () => {\r\n        LOADER = document.getElementById('js-loader');\r\n        TRAY = document.getElementById('js-tray-slide');\r\n        DRAG_NOTICE = document.getElementById('js-drag-notice');\r\n        canvas = document.querySelector('#c');\r\n\r\n        scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(BACKGROUND_COLOR);\r\n        // scene.fog = new THREE.Fog(BACKGROUND_COLOR, 20, 100);\r\n        scene.updateMatrixWorld(true);\r\n        renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n        var cameraFar = 10;\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n        camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        camera.position.z = cameraFar;\r\n        camera.position.x = 0;\r\n    }\r\n    const loadModel = () => {\r\n        // Initial material\r\n        const interaction = new Interaction(renderer, scene, camera);\r\n        INITIAL_MTL = new THREE.MeshPhongMaterial({ color: 0xf1f1f1, shininess: 10 });\r\n        SECOND_MTL = new THREE.MeshPhongMaterial({ color: 0x27AE60, shininess: 10 });\r\n\r\n        const INITIAL_MAP = [\r\n            { childID: \"bed_base\", mtl: SECOND_MTL, },\r\n            { childID: \"blanket\", mtl: INITIAL_MTL, },\r\n            { childID: \"pillow_1\", mtl: SECOND_MTL, },\r\n            { childID: \"pillow_2\", mtl: SECOND_MTL, },\r\n            { childID: \"legs\", mtl: SECOND_MTL, },\r\n            { childID: \"图形03\", mtl: SECOND_MTL, },\r\n            { childID: \"matress\", mtl: SECOND_MTL, },\r\n        ];\r\n\r\n        // var loader = new GLTFLoader();\r\n        var loader = new FBXLoader();\r\n        loader.load(MODEL_PATH, function (gltf) {\r\n            theModel = gltf;\r\n            // theModel.scale.set(2, 2, 2);\r\n            theModel.traverse(o => {\r\n                if (o.isMesh) {\r\n                    o.castShadow = true;\r\n                    o.receiveShadow = true;\r\n                    o.on('click', selectArea, false);\r\n\r\n                    o.on('mouseout', prop => {\r\n                        // console.log(prop)\r\n                    }, false);\r\n                    o.on('mouseover', prop => {\r\n                        // console.log(prop)\r\n                    }, false);\r\n                }\r\n            });\r\n            // scene.add(theModel)\r\n\r\n            // // Set the models initial scale   \r\n            // theModel.rotation.y = Math.PI;\r\n\r\n            // // Offset the y position a bit\r\n            // theModel.position.y = -1;\r\n            camera.position.z = 5;\r\n            // // Set initial textures\r\n            for (let object of INITIAL_MAP) {\r\n                initColor(theModel, object.childID, object.mtl, object.zPosition);\r\n            }\r\n            // // Add the model to the scene\r\n            scene.add(theModel);\r\n\r\n            // Remove the loader\r\n            LOADER.remove();\r\n\r\n        }, undefined, function (error) {\r\n            console.error(error);\r\n        });\r\n    }\r\n    const addLights = () => {\r\n        // Add lights\r\n        var hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.61);\r\n        hemiLight.position.set(0, 50, 0);\r\n        // Add hemisphere light to scene   \r\n        scene.add(hemiLight);\r\n\r\n        var dirLight = new THREE.DirectionalLight(0xffffff, 0.54);\r\n        dirLight.position.set(-8, 12, 8);\r\n        // dirLight.castShadow = true;\r\n        dirLight.shadow.mapSize = new THREE.Vector2(1024, 1024);\r\n        // Add directional Light to scene    \r\n        scene.add(dirLight);\r\n        // // Floor\r\n        // var floorGeometry = new THREE.PlaneGeometry(5000, 5000, 1, 1);\r\n        // var floorMaterial = new THREE.MeshPhongMaterial({\r\n        //     color: 0xeeeeee,\r\n        //     shininess: 0\r\n        // });\r\n\r\n\r\n        // var floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n        // floor.rotation.x = -0.5 * Math.PI;\r\n        // // floor.receiveShadow = true;\r\n        // floor.position.y = -1;\r\n        // scene.add(floor);\r\n        // Add controls\r\n        controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.maxPolarAngle = Math.PI / 2;\r\n        controls.minPolarAngle = Math.PI / 3;\r\n        controls.enableDamping = true;\r\n        controls.enablePan = false;\r\n        controls.dampingFactor = 0.1;\r\n        controls.autoRotate = false; // Toggle this if you'd like the chair to automatically rotate\r\n        controls.autoRotateSpeed = 0.2; // 30\r\n    }\r\n    const initColor = (parent, type, mtl, zPosition) => {\r\n        parent.traverse(o => {\r\n            if (o.isMesh) {\r\n                if (o.name.includes(type)) {\r\n                    o.material = mtl;\r\n                    o.nameID = type; // Set a new property to identify this object\r\n                    o.zPosition = zPosition; // Set a new property to identify this object\r\n                }\r\n            }\r\n        });\r\n    };\r\n    const animate = () => {\r\n        controls.update();\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(animate);\r\n\r\n        if (resizeRendererToDisplaySize(renderer)) {\r\n            const canvas = renderer.domElement;\r\n            camera.aspect = canvas.clientWidth / canvas.clientHeight;\r\n            camera.updateProjectionMatrix();\r\n        }\r\n\r\n        if (theModel != null && loaded === false) {\r\n            initialRotation();\r\n        }\r\n        // rayCasterRenderer();\r\n    };\r\n    const resizeRendererToDisplaySize = (renderer) => {\r\n        const canvas = renderer.domElement;\r\n        var width = window.innerWidth;\r\n        var height = window.innerHeight;\r\n        var canvasPixelWidth = canvas.width / window.devicePixelRatio;\r\n        var canvasPixelHeight = canvas.height / window.devicePixelRatio;\r\n\r\n        const needResize = canvasPixelWidth !== width || canvasPixelHeight !== height;\r\n        if (needResize) {\r\n\r\n            renderer.setSize(width, height, false);\r\n        }\r\n        return needResize;\r\n    }\r\n    const buildColors = (colors) => {\r\n        for (let [i, color] of colors.entries()) {\r\n            let swatch = document.createElement('div');\r\n            swatch.classList.add('tray__swatch');\r\n\r\n            if (color.texture) {\r\n                swatch.style.backgroundImage = \"url(\" + color.texture + \")\";\r\n            } else {\r\n                swatch.style.background = \"#\" + color.color;\r\n            }\r\n\r\n            swatch.setAttribute('data-key', i);\r\n            TRAY.append(swatch);\r\n        }\r\n    }\r\n    const selectOption = (e) => {\r\n        let option = e.target;\r\n        activeOption = e.target.dataset && e.target.dataset.option ? e.target.dataset.option : e.target;\r\n        for (const otherOption of options) {\r\n            otherOption.classList.remove('--is-active');\r\n        }\r\n        option.classList.add('--is-active');\r\n        // camera.position.x = option.position;\r\n        const part = theModel.children.find(model => model.nameID === activeOption);\r\n\r\n        setChildPosition(part)\r\n        // camera.lookAt(position.x, position.y, position.z);\r\n        // controls.target.copy(position);\r\n        // const mesh = new THREE.Mesh(part.geometry, new THREE.LineBasicMaterial({color: 0xffffff}));\r\n        // // mesh.visible   = false\r\n        // scene.add(mesh);\r\n\r\n        // var edges = new THREE.EdgesGeometry(part.geometry);\r\n        // var line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({ color: 0xff0000 }));\r\n        //console.log(mesh);\r\n        // var outlineMaterial1 = new THREE.MeshBasicMaterial({ color: 0xff0000, side: THREE.BackSide, wireframe: true });\r\n        // var outlineMesh1 = new THREE.Mesh(part.geometry, outlineMaterial1);\r\n\r\n        // child = child of my object\r\n\r\n        // var outlineMaterial1 = new THREE.MeshBasicMaterial({ color: 0xffffff, side: THREE.BackSide, wireframe: true });\r\n        // var outlineMesh1 = new THREE.Mesh(part.geometry, outlineMaterial1);\r\n        // outlineMesh1.position.set(part.position);\r\n        // outlineMesh1.scale.multiplyScalar(1.05);\r\n        // scene.add(outlineMesh1);\r\n        // scene.add(outlineMaterial1);\r\n        // var geo = new THREE.EdgesGeometry(part.geometry);\r\n        // var mat = new THREE.LineBasicMaterial({ color: 0x000000, linewidth: 4 });\r\n        // var wireframe = new THREE.LineSegments(geo, mat);\r\n        // wireframe.renderOrder = 1; // make sure wireframes are rendered 2nd\r\n        // part.add(wireframe);\r\n        // position.z = part.zPosition;\r\n        // var wireframeGeomtry = new THREE.WireframeGeometry(part.geometry);\r\n        // var wireframeMaterial = new THREE.LineBasicMaterial({ color: 0xffffff });\r\n        // var wireframe = new THREE.LineSegments(wireframeGeomtry, wireframeMaterial);\r\n        // wireframe.name = part.nameID;\r\n        // part.add(wireframe);\r\n        // camera.position.copy(position);\r\n        // camera.lookAt(controls.target);\r\n        // camera.translate(0,0,1);\r\n        // camera.far = cameraFar;\r\n        // camera.Translate(0, 0, 1);\r\n        // var bb = new THREE.Box3()\r\n        // bb.setFromObject(part);\r\n        // bb.center(controls.target);\r\n        // alert(position.x + ',' + position.y + ',' + position.z);\r\n    }\r\n    const setChildPosition = (child) => {\r\n\r\n        child.geometry.computeBoundingBox();\r\n\r\n        var boundingBox = child.geometry.boundingBox;\r\n\r\n        var position = new THREE.Vector3();\r\n        position.subVectors(boundingBox.max, boundingBox.min);\r\n        position.multiplyScalar(0.5);\r\n        position.add(boundingBox.min);\r\n\r\n        position.applyMatrix4(child.matrixWorld);\r\n        position.z = child.zPosition;\r\n        camera.position.copy(position);\r\n        camera.lookAt(controls.target);\r\n    }\r\n\r\n    const slide = (wrapper, items) => {\r\n        var posX1 = 0,\r\n            posX2 = 0,\r\n            posInitial,\r\n            threshold = 20,\r\n            posFinal\r\n        const dragStart = (e) => {\r\n            e = e || window.event;\r\n            posInitial = items.offsetLeft;\r\n            difference = sliderItems.offsetWidth - slider.offsetWidth;\r\n            difference = difference * -1;\r\n\r\n            if (e.type === 'touchstart') {\r\n                posX1 = e.touches[0].clientX;\r\n            } else {\r\n                posX1 = e.clientX;\r\n                document.onmouseup = dragEnd;\r\n                document.onmousemove = dragAction;\r\n            }\r\n        }\r\n\r\n        const dragAction = (e) => {\r\n            e = e || window.event;\r\n\r\n            if (e.type === 'touchmove') {\r\n                posX2 = posX1 - e.touches[0].clientX;\r\n                posX1 = e.touches[0].clientX;\r\n            } else {\r\n                posX2 = posX1 - e.clientX;\r\n                posX1 = e.clientX;\r\n            }\r\n\r\n            if (items.offsetLeft - posX2 <= 0 && items.offsetLeft - posX2 >= difference) {\r\n                items.style.left = items.offsetLeft - posX2 + \"px\";\r\n            }\r\n        }\r\n\r\n        const dragEnd = (e) => {\r\n            posFinal = items.offsetLeft;\r\n            if (posFinal - posInitial < -threshold) {\r\n\r\n            } else if (posFinal - posInitial > threshold) {\r\n\r\n            } else {\r\n                items.style.left = posInitial + \"px\";\r\n            }\r\n\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n        }\r\n        // Mouse events\r\n        items.onmousedown = dragStart;\r\n        // Touch events\r\n        items.addEventListener('touchstart', dragStart);\r\n        items.addEventListener('touchend', dragEnd);\r\n        items.addEventListener('touchmove', dragAction);\r\n        // slide(slider, sliderItems);\r\n    }\r\n    const selectSwatch = (e) => {\r\n        let color = colors[parseInt(e.target.dataset.key)];\r\n        let new_mtl;\r\n\r\n        if (color.texture) {\r\n\r\n            let txt = new THREE.TextureLoader().load(color.texture);\r\n\r\n            txt.repeat.set(color.size[0], color.size[1], color.size[2]);\r\n            txt.wrapS = THREE.RepeatWrapping;\r\n            txt.wrapT = THREE.RepeatWrapping;\r\n\r\n            new_mtl = new THREE.MeshPhongMaterial({\r\n                map: txt,\r\n                shininess: color.shininess ? color.shininess : 10\r\n            });\r\n\r\n        } else {\r\n            new_mtl = new THREE.MeshPhongMaterial({\r\n                color: parseInt('0x' + color.color),\r\n                shininess: color.shininess ? color.shininess : 10\r\n            });\r\n\r\n\r\n        }\r\n\r\n        setMaterial(theModel, activeOption, new_mtl);\r\n    }\r\n    const setMaterial = (parent, type, mtl) => {\r\n        parent.traverse(o => {\r\n            if (o.isMesh && o.nameID != null) {\r\n                if (o.nameID === type) {\r\n                    o.material = mtl;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // Function - Opening rotate\r\n    let initRotate = 0;\r\n\r\n    const initialRotation = () => {\r\n        initRotate++;\r\n        if (initRotate <= 120) {\r\n            theModel.rotation.y += Math.PI / 60;\r\n        } else {\r\n            loaded = true;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        raycaster = new THREE.Raycaster();\r\n        mouse = new THREE.Vector2();\r\n        window.addEventListener('mousemove', onMouseMove, false);\r\n\r\n        window.requestAnimationFrame(rayCasterRenderer);\r\n        initEnvironment();\r\n        loadModel();\r\n        addLights();\r\n        animate();\r\n        buildColors(colors);\r\n\r\n\r\n        // render();\r\n        slider = document.getElementById('js-tray');\r\n        sliderItems = document.getElementById('js-tray-slide');\r\n        slides = sliderItems.getElementsByClassName('tray__swatch');\r\n\r\n        slide(slider, sliderItems);\r\n\r\n        // Select Option\r\n        options = document.querySelectorAll(\".option\");\r\n        for (const option of options) {\r\n            option.addEventListener('click', selectOption);\r\n        }\r\n        // Swatches\r\n        const swatches = document.querySelectorAll(\".tray__swatch\");\r\n        for (const swatch of swatches) {\r\n            swatch.addEventListener('click', selectSwatch);\r\n        }\r\n    }, []);\r\n    const onMouseMove = (event) => {\r\n\r\n        // calculate mouse position in normalized device coordinates\r\n        // (-1 to +1) for both components\r\n\r\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n        // activeOption = event.intersects[0].object.name;\r\n        // event.intersects[0].object.material.color.set(0xffeeee);\r\n        // rayCasterRenderer();\r\n\r\n    }\r\n    const selectArea = (event) => {\r\n        activeOption = event.intersects[0].object.name;\r\n\r\n    }\r\n    // const onMouseMoveOut = (event) => {\r\n\r\n    //     // calculate mouse position in normalized device coordinates\r\n    //     // (-1 to +1) for both components\r\n\r\n    //     mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    //     mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n    //     if (event && event.intersects.length > 0) {\r\n    //         for (var i = 0; i < event.intersects.length; i++) {\r\n\r\n    //             event.intersects[i].object.material.color.set(0xffeeee);\r\n    //             switch (event.intersects[i].object.name) {\r\n    //                 case 'Outer_Wall': {\r\n    //                     event.intersects[i].object.material.color.set(SECOND_MTL);\r\n    //                     break;\r\n    //                 }\r\n    //                 case 'Inner_Room_Wall': {\r\n    //                     event.intersects[i].object.material.color.set(INITIAL_MTL);\r\n    //                     break;\r\n    //                 }\r\n    //                 case 'Floor': {\r\n    //                     event.intersects[i].object.material.color.set(SECOND_MTL);\r\n    //                     break;\r\n    //                 }\r\n    //                 default: { }\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     // event.intersects[0].object.material.color.set(0xffeeee);\r\n    //     // rayCasterRenderer();\r\n\r\n    // }\r\n    const rayCasterRenderer = (objectList) => {\r\n\r\n        // update the picking ray with the camera and mouse position\r\n        raycaster.setFromCamera(mouse, camera);\r\n\r\n        // calculate objects intersecting the picking ray\r\n        var intersects = raycaster.intersectObjects(scene.children);\r\n\r\n        for (var i = 0; i < intersects.length; i++) {\r\n\r\n            intersects[i].object.material.color.setHex(0x27AE60);\r\n\r\n        }\r\n\r\n        renderer.render(scene, camera);\r\n\r\n    }\r\n    return (\r\n        <BedJSX />\r\n    )\r\n}\r\nexport default Bed;","import React, { useState, useEffect } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\nimport Axios from 'axios';\r\nconst Delete = props => {\r\n    return `<span className=\"fa fa-cros\" />${props.value}</span>`\r\n}\r\nconst Todos = () => {\r\n    const columnDefs = [\r\n        {\r\n            field: 'id',\r\n        },\r\n        {\r\n            field: 'userId',\r\n        },\r\n        {\r\n            field: 'title',\r\n        },\r\n        {\r\n            field: 'completed',\r\n        },\r\n        {\r\n            field: 'id',\r\n            headerName: '',\r\n            cellRenderer: Delete\r\n\r\n        }\r\n    ];\r\n    const [rowData, setRowData] = useState([]);\r\n    const gridOptions = {};\r\n    useEffect(() => {\r\n        Axios.get('https://jsonplaceholder.typicode.com/todos')\r\n            .then(response => {\r\n                setRowData(response.data);\r\n            });\r\n    }, []);\r\n    const onCellClicked = props => {\r\n        console.log(props);\r\n    }\r\n    const onCellDoubleClicked = props => {\r\n        console.log(props);\r\n    }\r\n    return (\r\n        <div\r\n            className=\"ag-theme-material\"\r\n            style={{\r\n                height: '500px',\r\n                width: '1200px'\r\n            }}\r\n        >\r\n            <AgGridReact\r\n                enableSorting=\"true\"\r\n                enableFilter=\"filter\"\r\n                pagination=\"true\"\r\n                paginationPageSize=\"20\"\r\n                onCellClicked={onCellClicked}\r\n                onCellDoubleClicked={onCellDoubleClicked}\r\n                gridOptions={gridOptions}\r\n                columnDefs={columnDefs}\r\n                rowData={rowData}>\r\n            </AgGridReact>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todos;\r\n","import React from 'react';\nimport Todos from './Todos'\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <Todos />\n    </div>\n  );\n};\n\nexport default Home;\n","// import React from 'react';\n\nexport const colors = [\n    {\n      texture: '/chair/img/wood_.jpg',\n      size: [2, 2, 2],\n      shininess: 60 },\n    \n    {\n      texture: '/chair/img/fabric_.jpg',\n      size: [4, 4, 4],\n      shininess: 0 },\n    \n    {\n      texture: '/chair/img/pattern_.jpg',\n      size: [8, 8, 8],\n      shininess: 10 },\n    \n    {\n      texture: '/chair/img/denim_.jpg',\n      size: [3, 3, 3],\n      shininess: 0 },\n    \n    {\n      texture: '/chair/img/quilt_.jpg',\n      size: [6, 6, 6],\n      shininess: 0 },\n    {\n      texture: '/chair/img/profile.jpg',\n      size: [4, 4, 4],\n      shininess: 0 },\n    \n    {\n      color: '131417' },\n    \n    {\n      color: '374047' },\n    \n    {\n      color: '5f6e78' },\n    \n    {\n      color: '7f8a93' },\n    \n    {\n      color: '97a1a7' },\n    \n    {\n      color: 'acb4b9' },\n    \n    {\n      color: 'DF9998' },\n    \n    {\n      color: '7C6862' },\n    \n    {\n      color: 'A3AB84' },\n    \n    {\n      color: 'D6CCB1' },\n    \n    {\n      color: 'F8D5C4' },\n    \n    {\n      color: 'A3AE99' },\n    \n    {\n      color: 'EFF2F2' },\n    \n    {\n      color: 'B0C5C1' },\n    \n    {\n      color: '8B8C8C' },\n    \n    {\n      color: '565F59' },\n    \n    {\n      color: 'CB304A' },\n    \n    {\n      color: 'FED7C8' },\n    \n    {\n      color: 'C7BDBD' },\n    \n    {\n      color: '3DCBBE' },\n    \n    {\n      color: '264B4F' },\n    \n    {\n      color: '389389' },\n    \n    {\n      color: '85BEAE' },\n    \n    {\n      color: 'F2DABA' },\n    \n    {\n      color: 'F2A97F' },\n    \n    {\n      color: 'D85F52' },\n    \n    {\n      color: 'D92E37' },\n    \n    {\n      color: 'FC9736' },\n    \n    {\n      color: 'F7BD69' },\n    \n    {\n      color: 'A4D09C' },\n    \n    {\n      color: '4C8A67' },\n    \n    {\n      color: '25608A' },\n    \n    {\n      color: '75C8C6' },\n    \n    {\n      color: 'F5E4B7' },\n    \n    {\n      color: 'E69041' },\n    \n    {\n      color: 'E56013' },\n    \n    {\n      color: '11101D' },\n    \n    {\n      color: '630609' },\n    \n    {\n      color: 'C9240E' },\n    \n    {\n      color: 'EC4B17' },\n    \n    {\n      color: '281A1C' },\n    \n    {\n      color: '4F556F' },\n    \n    {\n      color: '64739B' },\n    \n    {\n      color: 'CDBAC7' },\n    \n    {\n      color: '946F43' },\n    \n    {\n      color: '66533C' },\n    \n    {\n      color: '173A2F' },\n    \n    {\n      color: '153944' },\n    \n    {\n      color: '27548D' },\n    \n    {\n      color: '438AAC' }\n];\n\nexport const BACKGROUND_COLOR = 0xf1f1f1;\nexport const INITIAL_MATERIAL_COLOR = 0xf1f1f1;\nexport const INITIAL_ROTATION = false;\n\nexport const MODEL_PATH = \"/chair/chair.glb\";\nexport const ROOM_MODEL_PATH = \"/chair/room.glb\";\nexport const BED_MODEL_PATH = \"/chair/Bed.FBX\";\nexport var activeOption = 'legs';\nexport var loaded = false;\n","import React from 'react';\n\nconst JSX = () =>{\n    return (\n        <div className=\"canvas-wrapper\">\n            <div className=\"loading\" id=\"js-loader\">\n                <div className=\"loader\"></div>\n            </div>\n            <div className=\"options\"> \n            <div className=\"option --is-active\" data-option=\"legs\">\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/legs.svg\" alt=\"\" />\n            </div>\n            <div className=\"option\" data-option=\"cushions\">\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/cushions.svg\" alt=\"\" />\n            </div>\n            <div className=\"option\" data-option=\"base\">\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/base.svg\" alt=\"\" />\n            </div>\n            <div className=\"option\" data-option=\"supports\">\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/supports.svg\" alt=\"\" />\n            </div>\n            <div className=\"option\" data-option=\"back\">\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/back.svg\" alt=\"\" />\n            </div>\n            </div> \n            <canvas id=\"c\"></canvas>\n            <div className=\"controls\">\n                <div className=\"info\">\n                    <div className=\"info__message\">\n                        <p><strong>&nbsp;Grab&nbsp;</strong> to rotate. <strong>&nbsp;Scroll&nbsp;</strong> to zoom. <strong>&nbsp;Drag&nbsp;</strong> swatches to view more.</p>\n                    </div>\n                </div>\n                <div id=\"js-tray\" className=\"tray\">\n                    <div id=\"js-tray-slide\" className=\"tray__slide\"></div>\n                </div>\n            </div> \n        </div>\n    );\n}\n\nexport default JSX;","import React, { useEffect } from 'react';\nimport './Sophie.css';\nimport * as THREE from \"three\";\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nvar renderer = null;\nexport const Sophie = () => {\n  useEffect(() => {\n    // Update the document title using the browser API\n    const LOADER = document.getElementById('js-loader');\n    const TRAY = document.getElementById('js-tray-slide');\n    const DRAG_NOTICE = document.getElementById('js-drag-notice');\n\n    var theModel;\n    const MODEL_PATH = \"/fbx/rp_sophia_animated_003_idling.fbx\";\n\n    var loaded = false;\n\n    const BACKGROUND_COLOR = 0xf1f1f1;\n    const canvas = document.querySelector('#c');\n    var scene = new THREE.Scene();\n    scene.background = new THREE.Color(BACKGROUND_COLOR);\n    scene.fog = new THREE.Fog(BACKGROUND_COLOR, 20, 100);\n\n    renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\n    renderer.shadowMap.enabled = true;\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    var cameraFar = 3;\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    // this.mount.appendChild(renderer.domElement);\n\n    var camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = cameraFar;\n    camera.position.x = 0;\n\n    // var loader = new GLTFLoader();\n    var loader = new FBXLoader();\n    loader.load(MODEL_PATH, function (object) {\n      theModel = object;\n      object.traverse(function (child) {\n        if (child.material) {\n          // child.material.wireframe = true;\n        }\n        console.log(child);\n      });\n\n      // Set the models initial scale   \n      theModel.scale.set(0.01, 0.01, 0.01);\n      theModel.rotation.set(0, 0, 0);\n\n      // Offset the y position a bit\n      theModel.position.y = -1;\n      // Add the model to the scene\n      scene.add(theModel);\n\n      // Remove the loader\n      LOADER.remove();\n\n    }, undefined, function (error) {\n      console.error(error);\n    });\n    // Add lights\n    var hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.61);\n    hemiLight.position.set(0, 50, 0);\n    // Add hemisphere light to scene   \n    scene.add(hemiLight);\n\n    var dirLight = new THREE.DirectionalLight(0xffffff, 0.54);\n    dirLight.position.set(-8, 0, 8);\n    dirLight.castShadow = true;\n    dirLight.shadow.mapSize = new THREE.Vector2(1024, 1024);\n    // Add directional Light to scene    \n    scene.add(dirLight);\n    var pointLight = new THREE.PointLight(0xffffff, 0.9);\n    pointLight.position.set(-5, -1, 5);\n    scene.add(pointLight);\n\n\n\n    // Floor\n    var floorGeometry = new THREE.PlaneGeometry(5000, 5000, 1, 1);\n    var floorMaterial = new THREE.MeshPhongMaterial({\n      color: 0xeeeeee,\n      shininess: 0\n    });\n\n\n    var floor = new THREE.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -0.5 * Math.PI;\n    floor.receiveShadow = true;\n    floor.position.y = -1;\n    scene.add(floor);\n    // Add controls\n    var controls = new OrbitControls(camera, renderer.domElement);\n    controls.maxPolarAngle = Math.PI / 2;\n    controls.minPolarAngle = Math.PI / 3;\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    controls.dampingFactor = 0.1;\n    controls.autoRotate = true;\n    controls.autoRotateSpeed = 0.2; // 30\n    var animate = function () {\n      controls.update();\n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n\n      if (resizeRendererToDisplaySize(renderer)) {\n        const canvas = renderer.domElement;\n        camera.aspect = canvas.clientWidth / canvas.clientHeight;\n        camera.updateProjectionMatrix();\n      }\n\n      if (theModel != null && loaded === false) {\n        initialRotation();\n        DRAG_NOTICE.classList.add('start');\n      }\n    };\n\n    animate();\n    // Function - New resizing method\n    function resizeRendererToDisplaySize(renderer) {\n      const canvas = renderer.domElement;\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n      var canvasPixelWidth = canvas.width / window.devicePixelRatio;\n      var canvasPixelHeight = canvas.height / window.devicePixelRatio;\n\n      const needResize = canvasPixelWidth !== width || canvasPixelHeight !== height;\n      if (needResize) {\n\n        renderer.setSize(width, height, false);\n      }\n      return needResize;\n    }\n    // Function - Opening rotate\n    let initRotate = 0;\n\n    function initialRotation() {\n      initRotate++;\n      if (initRotate <= 120) {\n        theModel.rotation.y += Math.PI / 60;\n      } else {\n        loaded = true;\n      }\n    }\n  });\n  return (\n    <div>\n      < div className=\"loading\" id=\"js-loader\" >\n        <div className=\"loader\"></div>\n      </div >\n      <span className=\"drag-notice\" id=\"js-drag-notice\">Drag to rotate 360&#176;</span>\n      <div className=\"options\">\n\n      </div>\n      <canvas id=\"c\"></canvas>\n      <div className=\"controls\">\n        <div className=\"info\">\n          <div className=\"info__message\">\n            <p><strong>&nbsp;Grab&nbsp;</strong> to rotate. <strong>&nbsp;Scroll&nbsp;</strong> to zoom. <strong>&nbsp;Drag&nbsp;</strong> swatches to view more.</p>\n          </div>\n        </div>\n        <div id=\"js-tray\" className=\"tray\">\n          <div id=\"js-tray-slide\" className=\"tray__slide\"></div>\n        </div>\n      </div>\n    </div>)\n}\n\nexport default Sophie;","import React from 'react';\n\nconst About = () =>{\n  return (\n    <div className=\"about-section\">\n        <h1>About Page</h1>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\r\n\r\nconst RoomJSX = () =>{\r\n    return (\r\n        <div className=\"canvas-wrapper\">\r\n            <div className=\"loading\" id=\"js-loader\">\r\n                <div className=\"loader\"></div>\r\n            </div>\r\n            <div className=\"options\"> \r\n            <div className=\"option --is-active\" data-option=\"Outer_Wall\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/legs.svg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"option\" data-option=\"Inner_Room_Wall\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/cushions.svg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"option\" data-option=\"Floor\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/base.svg\" alt=\"\" />\r\n            </div>\r\n            {/* <div className=\"option\" data-option=\"supports\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/supports.svg\" alt=\"\" />\r\n            </div> */}\r\n            {/* <div className=\"option\" data-option=\"back\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/back.svg\" alt=\"\" />\r\n            </div> */}\r\n            </div> \r\n            <canvas id=\"c\"></canvas>\r\n            <div className=\"controls\">\r\n                <div className=\"info\">\r\n                    <div className=\"info__message\">\r\n                        <p><strong>&nbsp;Grab&nbsp;</strong> to rotate. <strong>&nbsp;Scroll&nbsp;</strong> to zoom. <strong>&nbsp;Drag&nbsp;</strong> swatches to view more.</p>\r\n                    </div>\r\n                </div>\r\n                <div id=\"js-tray\" className=\"tray\">\r\n                    <div id=\"js-tray-slide\" className=\"tray__slide\"></div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoomJSX;","import React from 'react';\r\n\r\nconst BedSX = () =>{\r\n    return (\r\n        <div className=\"canvas-wrapper\">\r\n            <div className=\"loading\" id=\"js-loader\">\r\n                <div className=\"loader\"></div>\r\n            </div>\r\n            <div className=\"options\"> \r\n            <div className=\"option --is-active\" data-option=\"Outer_Wall\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/legs.svg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"option\" data-option=\"Inner_Room_Wall\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/cushions.svg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"option\" data-option=\"Floor\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/base.svg\" alt=\"\" />\r\n            </div>\r\n            {/* <div className=\"option\" data-option=\"supports\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/supports.svg\" alt=\"\" />\r\n            </div> */}\r\n            {/* <div className=\"option\" data-option=\"back\">\r\n                <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/back.svg\" alt=\"\" />\r\n            </div> */}\r\n            </div> \r\n            <canvas id=\"c\"></canvas>\r\n            <div className=\"controls\">\r\n                <div className=\"info\">\r\n                    <div className=\"info__message\">\r\n                        <p><strong>&nbsp;Grab&nbsp;</strong> to rotate. <strong>&nbsp;Scroll&nbsp;</strong> to zoom. <strong>&nbsp;Drag&nbsp;</strong> swatches to view more.</p>\r\n                    </div>\r\n                </div>\r\n                <div id=\"js-tray\" className=\"tray\">\r\n                    <div id=\"js-tray-slide\" className=\"tray__slide\"></div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BedSX;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"../components/Home\";\nimport Chair from \"../components/Chair/Chair\";\nimport House from \"../components/House\";\nimport Sophie from \"../components/Sophie\";\nimport About from \"../components/About\";\nimport Room from \"../components/Room/Room\";\nimport Bed from \"../components/Bed/Bed\";\n\nconst Routes = () => {\n  return (\n    <div className=\"app-wrapper\">\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/chair\" component={Chair} />\n        <Route path=\"/sophie\" component={Sophie} />\n        <Route path=\"/bed\" component={Bed} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/room\" component={Room} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport './DrawerToggleButton.css';\n\nconst DrawerToggleButton = props => (\n    <button className=\"toggle-button\" onClick={props.click}>\n        <div className=\"toggle-line\"></div>\n        <div className=\"toggle-line\"></div>\n        <div className=\"toggle-line\"></div>\n    </button>\n)\n\nexport default DrawerToggleButton;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './header.css';\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\n\nconst Header = props =>{\n  return (\n    <header className=\"navbar\">\n      <nav className=\"navbar-navigation\">\n        <div className=\"navbar-toggle-button\">\n          <DrawerToggleButton click={props.drawerToggleHandler}/>\n        </div>\n        <div className=\"navbar-logo\">\n          <Link className='navbar-logo' to=\"/\">DevsFort</Link>\n        </div>\n        <div className=\"navbar-spacer\"></div>\n        <div className=\"navbar-items\">\n        <ul>\n          <Link className=\"nav-links\" to=\"/\"><li>Home</li></Link>\n          <Link className=\"nav-links\" to=\"/chair\">  <li>Chair</li> </Link>\n          <Link className=\"nav-links\" to=\"/sophie\">  <li>Sophie</li> </Link>\n          <Link className=\"nav-links\" to=\"/room\">  <li>Room</li> </Link>\n          <Link className=\"nav-links\" to=\"/bed\">  <li>Bed</li> </Link>\n          <Link className=\"nav-links\" to=\"/about\">  <li>About</li> </Link>\n        </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  let drawerClasses = 'side-drawer';\n  if(props.show){\n    drawerClasses = 'side-drawer open';\n  }\n  \n  \n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        <Link className=\"nav-links\" to=\"/\"><li>Home</li></Link>\n        <Link className=\"nav-links\" to=\"/chair\">  <li>Chair</li> </Link>\n        <Link className=\"nav-links\" to=\"/sophie\">  <li>Sophie</li> </Link>\n        <Link className=\"nav-links\" to=\"/house\">  <li>House</li> </Link>\n        <Link className=\"nav-links\" to=\"/about\">  <li>About</li> </Link>\n      </ul>\n  </nav>\n  ) ;\n}\n\nexport default SideDrawer;","import React from \"react\";\nimport './Backdrop.css';\n\nconst backdrop = props =>  (\n    <div className=\"backdrop\" onClick={props.click} />\n);\nexport default backdrop;","import React ,{useState, useEffect} from 'react';\nimport './App.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport AllRoutes from './routes/main'\nimport Header from './components/partials/Navbar/header'\nimport SideDrawer from './components/partials/SideDrawer/SideDrawer';\nimport Backdrop from './components/partials/Backdrop/Backdrop';\n\nconst App = () =>  {\n  const [SideDrawerOpen,setSideDrawerOpen] = useState(false);\n  useEffect(()=>{\n    console.log('Effect run');\n  },[])\n  let backdrop;\n\n  const drawerToggleHandler = async () =>{\n    await setSideDrawerOpen(!SideDrawerOpen);\n  }\n  const backdropClickHandler = async () =>{\n    await setSideDrawerOpen(false);\n  }\n\n  if(SideDrawerOpen){\n     backdrop = <Backdrop click={backdropClickHandler} />;\n  }\n\n    return (\n      <BrowserRouter>\n      <div style={{height:'100%'}} >\n          <Header drawerToggleHandler = {drawerToggleHandler} />\n          <SideDrawer show ={SideDrawerOpen} />\n          {backdrop}\n          <main className=\"content-wrapper\" style={{marginTop:'40px'}}>\n            <AllRoutes/>\n        </main>\n        </div>\n      </BrowserRouter>\n    );\n  \n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}